"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const readline = require("readline");
const fs = require("fs");
const scan_1 = require("../lib/scan");
const parse_1 = require("../lib/parse");
const context_1 = require("../lib/context");
/**
 * Launch interactive shell
 * @param lexFlag - should we debug the lexer?
 * @param verboseFlag - did user pass verbose flag?
 */
function runShell(lexFlag = false, verboseFlag = true) {
    // Create line reader
    const rl = readline.createInterface({
        input: process.stdin,
        output: process.stdout,
        terminal: true,
        prompt: "> "
    });
    // Preserve context
    const ctx = new context_1.default(2);
    // For each line
    rl.on('line', line => {
        // TODO imports
        if (line.startsWith("#!load:")) {
            const fname = line.split(':')[1];
            const src = fs.readFileSync(fname).toString();
            console.log(src);
            const ev = (0, parse_1.default)((0, scan_1.default)(src, fname), ctx);
            if (!(ev instanceof context_1.default))
                console.log(ev);
            return;
        }
        // Tokenize the line
        const toks = (0, scan_1.default)(line);
        if (lexFlag)
            console.log(toks);
        // Parse
        if (!lexFlag) {
            const e = (0, parse_1.default)(toks, ctx);
            if (verboseFlag)
                return console.log(e);
            if (e instanceof context_1.default) {
                if (e.stack.length)
                    console.log(e.stack);
                return;
            }
            // Print errors and stuff
            console.log(e);
        }
    });
}
exports.default = runShell;
//# sourceMappingURL=shell.js.map