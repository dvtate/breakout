"use strict";
/*
 * Here are some reasons to stop the user from compiling Probably more will come as more things are added
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TypeError = exports.SyntaxError = exports.ParseError = exports.CompilerError = void 0;
class CompilerError extends Error {
}
exports.CompilerError = CompilerError;
;
// Base Class for parse-time errors
class ParseError extends CompilerError {
    /**
     * @param message - Reason
     */
    constructor(message) {
        super(message);
    }
}
exports.ParseError = ParseError;
;
// Reference specific section(s) of code
class SyntaxError extends ParseError {
    /**
     * @param message - Reason
     * @param tokens - Location
     * @param ctx - parser context
     */
    constructor(message, tokens, ctx) {
        super(message);
        this.tokens = tokens instanceof Array ? tokens : [tokens];
        this.ctx = ctx;
    }
}
exports.SyntaxError = SyntaxError;
;
class TypeError extends CompilerError {
    constructor(message, tokens, v, expected, ctx) {
        super(message);
        this.v = v;
        this.expected = expected;
        this.ctx = ctx;
        this.tokens = tokens instanceof Array ? tokens : [tokens];
    }
}
exports.TypeError = TypeError;
;
// Invalid Expression
class ValueError extends SyntaxError {
}
;
// Invalid Data Expression
class DataError extends SyntaxError {
}
;
// Unexpected Expression Syntactic Type
class ValueTypeError extends ValueError {
}
;
// Received a DataValue as expected but it's wrong .datatype
class DataTypeError extends SyntaxError {
}
;
// Unexpected
class DataValueError extends SyntaxError {
}
;
//# sourceMappingURL=error.js.map