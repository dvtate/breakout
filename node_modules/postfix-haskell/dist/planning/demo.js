"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const fs = require("fs");
const scan_1 = require("../lib/scan");
const parse_1 = require("../lib/parse");
const context_1 = require("../lib/context");
const error = require("../lib/error");
const util = require("../tools/util");
(async () => {
    // Read program source
    const fname = process.argv[2];
    const src = fs.readFileSync(fname).toString();
    // Compile program
    const ctx = (0, parse_1.default)((0, scan_1.default)(src, fname));
    if (ctx instanceof error.SyntaxError)
        console.log(util.formatErrorPos([ctx]));
    if (!(ctx instanceof context_1.default))
        throw ctx;
    // Generate WASM and check validity
    const wasm = await ctx.outWasm();
    const valid = WebAssembly.validate(wasm.buffer);
    if (!valid)
        throw new Error("WebAssembly.validate() failed");
    // Get WASM Module
    const mod = await WebAssembly.instantiate(wasm.buffer, {
        js: {
            'console.log': console.log,
            logStr: (addr, len) => {
                const str = new Uint8Array(mod.instance.exports.memory.buffer, len, addr);
                console.log(new TextDecoder().decode(str));
            },
        },
    });
    // const fac = mod.instance.exports.nfac as CallableFunction;
    // for (let i = 0; i < 10; i++)
    //     console.log(fac(i, 0, 1));
    // const { get, set, incr }
    //     = mod.instance.exports as any;
    // console.log(get());
    // set(20);
    // console.log(get());
    // incr();
    // console.log(get());
    // incr();
    // console.log(get());
    const w = mod.instance.exports;
    for (let i = 0; i < 5; i++) {
        w.test(1);
        console.log([...new Uint32Array(mod.instance.exports.memory.buffer)].slice(0, 4));
    }
})();
//# sourceMappingURL=demo.js.map